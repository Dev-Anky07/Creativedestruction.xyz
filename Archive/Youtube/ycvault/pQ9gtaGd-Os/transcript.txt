[ 0:00:15.000 ---> 0:00:49.000 ] Speaker A : Hey, everyone. Thanks for joining. For those of you who don't know, I'm Paige from Y Combinator, where I work on our work at a startup team. I'm essentially the team helping all of our founders hire great people like you. So this is why become a product engine engineer. This event was inspired because even at YC, we hire product engineers, and a lot of times, candidates don't know what that role means. Today, we have two wonderful founders at YC companies who will share their experiences and kind of give more color behind what it means to be a product engineer at their companies.
[ 0:00:50.000 ---> 0:00:55.000 ] Speaker B : So I'm James. I'm the co founder and CTO at Volley.
[ 0:00:56.000 ---> 0:01:00.000 ] Speaker C : I'm Kisava, I'm one of the co founders and the CEO of Luminai.
[ 0:01:00.000 ---> 0:04:15.000 ] Speaker B : Awesome. Yeah. So I'm just going to kind of talk a little bit about Voli specifically for a minute, just to give you the context there. This is Vali. We make games for Amazon Alexa and Google Home, and we're kind of a game studio in that sense. We have a bunch of products. Right now you're seeing Song Quiz, which is one of our most popular games on both platforms. It's a Name that Tune game. This is Magic Words, like a little word game. And this is sort of showing that you can play our games on Fire TVs as well. So anything with a microphone. We're trying to make voice controlled entertainment, voice controlled games. We have a lot of products, I guess, which is why we have a lot of product engineers working at Volley. And you can kind of check out our website yourself. But this shows a bit about our most popular products. So Songquiz, like I said, is kind of a name that tune music trivia game, super popular with families and friends. It's like a social experience. You can kind of play it in your living room and you can have a great evening. Kind of just trying to guess the artists and the titles of popular music. We also license a lot of brands from popular game shows that you probably will be familiar with. So we have a game for the prices, right? And for Jeopardy. For Who Wants to Be a Millionaire? Wheel of Fortune. Are you smarter than a fifth grader? And then we also have really casual games like Question of the Day, which is like a daily trivia question. We even have sort of stories that are controlled on your Alexa and Google Home for kids and families trying to go to sleep. So tons of stuff. There's even more down here. You can check it out. But yeah, that's basically the overview of the company. We went through Y Combinator in winter 2018, so we've been around for a while. We're pretty big, at least in my view now. I mean, biggest company I've worked at, which is 70 people or so, and we're based in San Francisco, headquartered there, but we're pretty hybrid right now. So like half of our employees are spread around the globe, primarily in the US. But we've got people everywhere and we know are hybrid even in the Bay Area. So people are kind of coming into the office two to three days a week. It's been working really well. I can talk a lot more about this later on, but we have this kind of structure to the company that I think is similar to a lot of other game studios where there's a lot of little small autonomous individual teams that are kind of working on individual products at the company. And that's kind of how we've been able to scale our product catalog pretty quickly to kind of become the leader in this new emerging space of voice controlled entertainment. So yeah, that's what we're working on. Happy to dig in on any of those topics but just wanted to give the overview first.
[ 0:04:17.000 ---> 0:10:37.000 ] Speaker C : So I'm Quesova, I'm one of the co founders and the CEO of Lumini. I put together a little deck quickly that I thought it can run through. But fundamentally what Luminai does is we take any kind of multi click, multi step, repetitive manual process and make it one click. But before I tell you why and how we do this, just wanted to share a quick story. So I grew up in the southern part of India, so most of my family, they're all sort of coconut farmers. So for the longest time until I was like ten years old, basically I lived on a coconut farm. Then when I was eleven, my parents kind of moved up to the city for the state I'm from and sort of stumbled upon Rubik's Cubes and got very good at solving Rubik's Cubes. Ended up kind of breaking a bunch of world records and was a captain of the international team and got to kind of travel the world all funded by the Indian government. And that sort of landed me in going to this high school called the United World College. And it's this high school that brings together people from 70 different countries to work on international peace and understanding. After I graduated I was like, okay, what's the craziest thing I could do to live this United World College mission which was to promote peace. And so very naively decided to kind of cycle from Europe to Asia to promote peace. And we cycled about 2500 miles across these same countries. And because of that, kind of landed in the Bay Area for like a summit. And when I came here, kind of fell in love with Silicon Valley and no work visa, no money. But sort of was like let's figure out a way to kind of continue being here. Ended up actually living off of hackathon prize money for six, seven months. And sort of the first project that kind of came out of it, or sort of the project that actually started to make money that came out of it became what we're working on today, which is Lumini. So sort of fast forward to what we're doing today. The reason I mentioned that story is because ever since I was ten, kind of efficiency is kind of embedded in my personality. It's primarily because of some of these like in the end of the day when you sort of start talking to some of the teams you work with primarily customer service, customer experience organizations, they face three or four problems. So the first one is that they have four, five, six different systems that they jump between to find information and then perform tasks associated with their jobs. And unfortunately, this is almost close to 50 or 60% of a customer service agent's kind of job and they only spend about 50% actually talking to customers. The second is sort of they spend a lot of time getting onboarded and ramped up to be able to actually do their job. The third is engineering resources to build support tooling is close to zero. Obviously engineers want to work on product. Most folks don't end up actually building any of the internal tooling. The final is sort of security and compliance. You might have seen the Okta support breakout but sort of the big hack that happened with Okta and the primary reason was because the support team, they're all tier one agents in countries that are not in the US. And they sort of have access to customer data and financial data that is very sensitive. And this sort of yields know sometimes tens of millions, if not hundreds of millions of dollars in support with an increased average handle time and lower customer satisfaction score. So what we ended up building was this external layer that sat on top of these existing systems to take any kind of multi click, multi step process and make it one click. And we do this using this technology we've built called Robotic Process Automation. And the reason this is sort of important in the context of product engineers is because we are a very product driven.org everybody we hire for, regardless of whether you're technical or not, actually goes through a product interview. Because we fundamentally believe that everybody should be able to actually understand why you are building the kinds of things you're building for the customers. And so we have this even internally, we ensure that every single person at the company is having FaceTime with the customer. On a weekly basis we've raised about $20 million. We're backed by some of the best folks in the Valley all the way from General Catalyst to Kraft and YC's Continuity Fund. And this is sort of talking a little bit about one of the customers we work with is this very breakout high growth company called whatnot that started with us when there were kind of 15 agents or so. And now they're in the hundreds of agents. And one of the things that these teams mentioned is that we're actually giving back the creative joy of being a customer service agent. Because in the end of the day, when you talk to these folks, they joined and decided to do this job because they want to talk to customers and solve their problems, but over 50% of their time, they're actually not doing that. So we're a little over half a million, 600K in revenue. We're working with customers. You probably know of strava ordering whatnot, as I mentioned, we're just starting to work with DoorDash and Carta, and the next time you kind of order from DoorDash and you want a refund, they're going to be processing all of that through Luminai. So just a fun fact there finally why you should join us. We've grown sort of five X in the last five months. But what I'm really proud of at Luminai is actually that product culture. And that comes from one underlying factor, is that we're a 15 person team, but we actually have six former YC founders at Alumini, and that drives this unbelievable amount of sort of want to be customer obsessed and have this very humble but very urgent and incredibly quick culture. And so that kind of drives us as a company. We're looking for sort of obviously why we're here. We're product engineers, but we're also looking for folks to come in and lead some of the teams we've built. So, yeah, you can find us here, and I'll pass it back to Paige, I think, to switch it up.
[ 0:10:38.000 ---> 0:10:45.000 ] Speaker A : Okay, awesome. Now let's start with the first question for the two of you. What is a product engineer?
[ 0:10:46.000 ---> 0:14:52.000 ] Speaker B : Sure I can jump in at volley. Product engineering is super core to how we structured our engineering. So, like I said, we have dozens of games and entertainment experiences on Alexa and Google Home, and each of them are especially like, the top six that we are focused the most on have their own product teams, and most engineers on those teams are product engineers. But we also have this whole other part of the engineering organization that we call Cortech, which is really how we've decided to split the organization. We have Cortech and Product, and everyone in these two separate divisions is an engineer, a software engineer. But it wasn't that helpful to just put up job wrecks for software engineers when we really do think of these two types of roles and two divisions in the organization pretty differently. So it's almost more helpful to start with Cortec, where we have kind of the centralized team that's working on our game engine. So many of you may know game engine companies like Unity or Unreal Engine, and those companies tend to be like, selling the engine, depending but to licensing the engine to other companies, other game studios. We were the first company to really want to build an engine that would run cross platform on Amazon Alexa and Google Home and kind of like make building games for these smart speaker platforms a lot easier and more efficient. So we built our own internal game engine for that purpose. And that's what the Core tech team is primarily doing. But they're also doing things like figuring out a how does that engine get architected and how does it get deployed into production, how do we debug, how do we add features, how do we make it flexible enough so that we can build all the cool products that we want to on top of it. So there's a whole infrastructure piece, there's a whole DevOps piece, and then there's the engine development itself. And on the flip side, on the product engineering side, those teams are really focused on using the engine to build amazing game experiences. So they're writing game logic. Maybe they're working with product management teams to design game features, right? Like a new game mode in Jeopardy. We just launched the ability to do kind of a final Jeopardy. Style game mode. We used to kind of just give you a set of six questions each day. But the final Jeopardy comes into play at the end of the week where you can kind of wager based on how much money you've earned over the course of the week. And it's a whole new feature that we had to design and develop for Voice. So that's an example of something you might work on as a product engineer. Whereas on the cortex side you'd be maybe working on the underlying systems that power all of our games. And yeah, like I said, we have these kind of really small, efficient, autonomous teams. And the reason they can work so quickly and efficiently on customer facing game logic and game features is because we have this other cortex team that supports them and has solved a lot of really thorny problems about DevOps and deployment at scale. So it's two very different worlds, but they're tied very close together and it's almost as if the product engineers are customers of the core tech engineers internally in the company.
[ 0:14:55.000 ---> 0:17:01.000 ] Speaker C : So on our end, the way we're actually structured is we're not large enough that we're starting to separate any of these. And probably there's a point where we will probably have to do that the same way probably Wally is structured at the moment. But at Lumini, what it means to be a product engineer is that you're kind of spending about 1015 percent of your time actually studying the customer and spending time with customers on a weekly basis. And so that means going and looking at each of these customer sort of channels and these communication setups, talking to users and then taking those insights and then thinking about how does this tie back into the business case, right? Longer term, how do we prioritize the types of things we need to build to drive the constant value and double down on the value that we're creating today? And then you take that layer and you think about that, and then you actually go back down to building, in our case, a consumerized enterprise product. And so right now, we're very heavily focused on a product not just within engineering, but across the board. So question from Carol do you have a product manager at the moment? No, and I think that's the advantage of sort of where we are today. But I think we're probably closer to that breaking point of realizing maybe we do need a PM to start kind of tackling in. So we actually just put out a first job rack for someone to come in and be a PM too. But that product engineer piece will continue to be the case. And then to answer Scott, yes, it is a hybrid of software engineer and a product manager, but more 80% probably engineering and probably 15, 20% being a PM.
[ 0:17:03.000 ---> 0:17:19.000 ] Speaker A : And to kind of build off of that, someone had a question about how the role of a product engineer might change for a company that's pre product market Fit pretty earlier on and a company that's a little later stage. Any thoughts on that one?
[ 0:17:20.000 ---> 0:18:10.000 ] Speaker C : For us, we were a product engineering from very pre product market Fit times to now. I would say we're sort of at the cusp of seeing a very strong signs of product market Fit just with the customers that we have and the usage and the ROI that each of these customers are getting. So it definitely changes from everybody sitting and whiteboarding and figuring out all the crazy ideas that you want to do to a little more structured on how do you think about roadmap, how do you think about the next phase. You start thinking a little bit in months rather than days. And so that probably is like one shift that's happened. Is that similar, James, or do you guys have something in the front?
[ 0:18:10.000 ---> 0:21:24.000 ] Speaker B : Yeah, I mean, it's really kind of similar to or like it's interesting to hear how you're set up right now, because I think that's how we were at the same size company when we were ten to 15 people. We didn't have any PMS. We were maybe just starting to ramp up the hiring there. And part of the huge benefits of going specifically after hiring product engineers and embedding kind of like product type product sense kind of evaluations into the hiring process was that you get these awesome engineers, but they can make those decisions for themselves that maybe at larger companies would require lots of check ins with the product teams. And as a startup, you want to be moving a lot faster than that. So you want to almost be testing for this in the application process. Your initial engineers, do they have good taste on product and are they making good customer facing decisions? Because there's not always going to be someone telling them exactly what the spec should be like. In the early days. Nowadays we've created a lot more structure, which is good. I think we needed to. We have scaled up to each team having multiple product engineers, a product lead, and a data analyst. So each game essentially has those discrete teams and they are able to kind of create a lot of their own sort of rituals around their roadmap and their KPIs and their timelines and they're moving really quickly. But it's kind of that studio model, except it's internal, right? Like each game has its own kind of dedicated resources on product analytics and product engineering essentially. And then there's the underlying infrastructure team that supports all of our games sort of across the company, and that's been working really well. The thing that we've done to kind of standardize this, so it doesn't get too crazy is we have this quarterly kind of KPI cycle essentially stolen from YC. We call it Demo Day. So if you're familiar with YC, there's a demo day at the end of the batch and you present it to investors. For us, internally, we actually do that with each game. With each team, we have the teams present to the entire company about what they were trying to achieve that quarter and what they tried, what worked, what didn't work. Did they hit the KPI, what they're going to try the following quarter. And as we've scaled, we've created a little more structure to these check ins and standardization across the games. But at the end of the day, the product engineers themselves are still doing very similar work to what they were doing when we were ten people, which is building great games and great game features that are played by the customer.
[ 0:21:30.000 ---> 0:22:11.000 ] Speaker C : I think the one thing that's really interesting that you mentioned, I think that's probably core to the product engineer title in general is actually autonomy. I think it's probably the real differentiator between a software engineer and a product engineer is the ability to go from zero to one without necessarily having to have check ins with five different sets of organizations. It's like really giving the power to a technical person to be like, hey, this is the problem, figure it out. And going from zero to one, I think is really the big change.
[ 0:22:11.000 ---> 0:22:54.000 ] Speaker B : Yeah, totally. I think you're spot on. There's so many questions that come up in designing products and when you're in an early stage team, it's often more important that you just make the decision and commit to it and make it fast rather than get it perfect or get it right before you launch or even test it perfectly. Just the reality of early stage pre product market fit startups is you need to be moving super quickly. And that means that you're probably creating problems down the line for yourself. But that's okay because you might not make it to that point unless you get the product out and learn from.
[ 0:22:54.000 ---> 0:23:14.000 ] Speaker A : The customer that makes a lot of sense. And for some of the software engineers who haven't been as customer facing before, what are some of the things that can kind of help them transition or think about why they might be more interested in a product engineering role than just a software engineering role?
[ 0:23:14.000 ---> 0:25:56.000 ] Speaker C : I think at least at Luminai, I would say about maybe about an engineering about 70% are more introverted, maybe even 80% more introverted, 20% more like super extroverted customer facing folks. And I think the interesting part is actually when you're making the transition from not necessarily communicating with an external facing party who you have a business relationship with and then transitioning into a context where you are communicating with them actively. It's pretty crazy how much customers love when engineers are actually involved in the day to day collaboration. Because engineers are the heart and soul of the product that they're using. And the fact that they have a direct line access to them in some form makes the customer so much happier and so much more open, actually, to accommodate whatever sort of style of communication that they want to have. But also, all in all, the reason I say that is because as you make that transition from software engineer to customer engineer or product engineer, it's actually pretty wild how welcoming that transition is, primarily because it's driven by the customer in so many ways, and you get to the heart and soul of why you're building what you're building and the real impact that it actually has. If you were to kind of build a button, right, you'll actually be able to see, what does this little button do for the hundreds of thousands of people that could potentially be using it all the way to, let's say we're a very founder driven organization. We take a lot of inspiration from Rippling, and so we kind of have a little bit of a business unitesque kind of setup. And so you can actually, at Lumina, you can actually see going fully from zero to one on a new vertical, potentially. Like, for example, right now we're in customer service, but the next sort of opportunity we're going to be tackling is actually sales ops and going from zero to one on taking what we've had and getting it up and running. You have that power. It's very sort of a different set of challenges that I would say the new modern businesses are kind of starting to adopt. So it's more exciting than scary.
[ 0:25:57.000 ---> 0:27:53.000 ] Speaker B : Yeah. And I can add that. Vali I think a good way to kind of prepare for the product engineering role would be if you're the type of engineer who's already thinking a lot about the customer journey, right. A lot of the problems that a customer might face in an application. I think that's a key skill set is maybe you're able to think of edge cases really effectively, right? Because maybe the customer is going to hit press this button or get to this flow and it'll be confusing or they won't know where they are in the application or it'll cause some issue downstream. That type of customer focused thinking is really important for a product engineer. And you can do it just in whatever engineering role you're in right now already. Just kind of putting yourself in the shoes of the customer or the user and the game player in our case. And you can also kind of think of it as something you can practice just by using apps yourself, whether it's a consumer facing app or on your phone or a work application that you're using all the time. Thinking about the feature set and what parts are hard and difficult and why they were coded in certain ways can be really valuable, especially at your current job. Being able to feedback suggestions up to the product leads to the product managers to suggest product improvements or ask the questions of why was this designed this way? I think that's the best practice for the types of decision making and thought process you'll have to go through as a product engineer specifically.
[ 0:27:54.000 ---> 0:28:16.000 ] Speaker A : Great. And this is sort of related, but a little different. So if someone is a product manager and has kind of been in that role, what are some signs maybe that they would be interested in becoming a product engineer again? And what are some technical skills that product managers might want to gain or freshen up on before they move into product engineering generally?
[ 0:28:17.000 ---> 0:29:33.000 ] Speaker C : I think I've sort of seen the other transition. It's like going from engineer to PM. I think PM back to product engineer is actually, I would say, probably way more effective because if you are by background technical but you've been doing PM work, then you've already gained all the necessary organizational frameworks to run a product. But then now you're actually going back into the weeds and building, which I think is like very I think that the signs are very simple, which is like, if you're having this, itch to go back to want to truly kind of get your hands dirty and build again in so many ways, but also not lose the product. Touch. And the want to talk to customers regularly. Making that switch is probably very exciting. On the technical side, I think you just need to kind of be up to date with sort of what folks are using to build. We kind of use the most modern kind of react node JS TypeScript stack. But that's like most companies in the SaaS world.
[ 0:29:34.000 ---> 0:30:39.000 ] Speaker B : Yeah, I mean, seconded here as well at Volley, It's node TypeScript react, those are the key technologies to be aware of to join a lot of startups. Like if you're caught up to speed on that tech stack, you're going to get a lot of interest as a PM who's interested in going back into engineering or learning, switching into engineering. And I think it's just like such a powerful skill set to have, especially if you are working on customer facing features. I think if you've been a PM and you're now going to come in as a product engineer, you're going to be probably interfacing with customers, potentially doing customer interviews, potentially, or just designing the features that are closest to the customer. It's really valuable, maybe more so than if you were going to go into infrastructure engineering or DevOps or something like that.
[ 0:30:39.000 ---> 0:30:50.000 ] Speaker A : Cool. If you think of your one or two top product engineers, what are the skills that they really excel at or what are their superpowers?
[ 0:30:50.000 ---> 0:33:46.000 ] Speaker C : So I think on our team we actually had a recent YC founder join us who was the CTO of a company and it's been like three months since he joined us and he's been exceptional. I would say that the reason why that kind of ramp time from going to zero to them being exceptional happened so quickly was primarily, I would say, very much driven by ownership and a curiosity to understand the core customer problem before writing any line of code. It's like a very YC esque mentality which was like, okay, here's the problems you're telling me, let me go and figure out if that's really, from an engineering standpoint, really how we should be approaching this. And so basically we built a core sort of V one robotic process automation engine that we kind of defined as our longer term moat that continuously will get better. And so he went in and kind of dug deep into actually figuring out if that'll kind of last and will grow with our customer base. Especially because when you're so early in the journey we went from basically with onboarding DoorDash, our user base is going to ten X over a month period. And when you're kind of dealing with that kind of scale on a month on month kind of basis, everything is going to break very quickly. And so you got to start being a little more proactive, especially in our world, which is like and maybe in the games world too. But I think in our world if a customer service system is down for five minutes, you're talking about hundreds of customers not being able to reach you and that's potentially losing customers, potentially like hundreds of thousands of dollars or maybe more in business impact. And so when you're dealing with that kind of scale, it's very core to be able to understand that problem. And I think the person who joined our team was able to really take that and then reshape and kind of build our PA engine like 2.0 in the last kind of three months to get ready for the next phase. And I think the other part of it, which was like the awareness of him also saying hey to me, he was like, hey case about yes, this is a new engine, but this. Will probably scale for up to this point and then we'll probably have to rebuild again. Right, and just having that awareness is also probably very key.
[ 0:33:47.000 ---> 0:35:53.000 ] Speaker B : Yeah, I think that's spot on is understanding the customer also being very data driven. I think it's just become a must in the current world, in startups especially. And I think when you're on a smaller team, there's probably like one or two or three maybe at most top metrics that you're trying to really grow, especially as you're trying to achieve product market fit or you're trying to get to the next round of fundraising. Everyone tries to be very focused on improving a set of metrics, and everyone should be super aligned on that. So a product engineer who's really effective is going to be laser focused on the work that needs to be done to move that metric, whatever it is in your company. For us at Volley, it's things like how many people are converting and buying a subscription in our games and how many people are retaining on the subscription, essentially paying multiple months over months. So whatever that kind of focus of the business is, you want to be super aligned there. And whether it's like figuring out what are the trade offs like, if you're going to work on one thing or the other, how much does that affect the business metrics, and maybe there won't be the product manager product lead telling you exactly making that trade off decision for you. You need to be a little bit more focused on letting the product people in the company know, or business leaders in the company know how long this feature will take and what the trade offs are in terms of how likely we are to hit our goals for the quarter or the year. So that's kind of really important is to have that mindset of being close to caring a lot about the business metrics. I think that maybe differentiates the role a little bit more from maybe more infrastructure oriented roles on our team, at least.
[ 0:35:54.000 ---> 0:36:01.000 ] Speaker A : And a question from Alfonso here, if you're able to share, what kind of KPIs do you use for product development?
[ 0:36:02.000 ---> 0:38:23.000 ] Speaker B : Yeah, so among the ones that I mentioned, we're selling subscriptions, so we're kind of a freemium model and essentially when a player discovers our game, they get a free experience and then we're trying to upsell them into a subscription. It's really similar to the mobile App Store in app purchase model, and you see this a lot on consumer technologies, consumer startups. The subscription model is super effective, but there's really clear, it's almost like SaaS Metrics. If you're familiar with SaaS metrics, they apply pretty well to the kind of consumer subscription model. So how many people are converting into the subscription? And usually it's a free trial, so how likely are you to pay after the trial is completed? How likely are you to pay the following month? And also you want to be looking at usage during the trial and usage during the first month, and those types of metrics that kind of show you not only are you maintaining the payment retention, but the usage retention as well. So those are a lot of the key things that we're looking at. And also, of course, a huge driver of our business also is just like discovery of our products. So there's a lot of work being done on marketing and growth before the user even gets to a product. So there's a whole side of the business there as well. Yeah, one thing I wanted to just add was a lot of our product engineers, what they're working on is not necessarily just like, designing and shipping a feature for the game, or not just building and shipping a feature for the game in collaboration with the product leads, but also running a lot of AB experiments. Right. So if you're someone who really enjoys that, learning from the A B tests that you're running in a product, I think that's a great place to explore as a product engineer, because you get to run a lot of experiments, because that's usually how we learn about the KPIs. What drives the KPIs and what we can do to hit our goals is by running lots of AP tests in the.
[ 0:38:25.000 ---> 0:40:21.000 ] Speaker C : Think. You know, like, Patrick Collison, who's one of the founders of Stripe, had recently spoken at a YC reunion, and he's spoken about what makes teams move fast. And the thing he said was, it's like knowing what a customer wants, figuring out the solution to that problem, building it, launching it, and then actually knowing if it worked. And that loop, the faster and faster and faster you do, the more progress you're able to make as a company. And so that's something we track very actively at the company. It's just like going from zero to one on defining and scoping. This is what we're going to solve for, and then actually releasing it and testing and surveying if this actually solved that problem. That loop is something that we define as in some form, like a KPI. We look at just like, from a product engineer lens. But then other things we care about, obviously, are we're very numbers driven.org. And what that means is, in the end of the day, we're driving efficiency. We're driving return on investment. And so these are folks that, before using Luminai, they were able to get, let's say, 100 kind of tickets done. Now with Luminai, let's say they do 124. That's like a 24% increase in efficiency or whatever. That's something we are constantly tracking, which is what does usage look like, what does ROI look like for each of these customers, and how do we continue to kind of double down and increase that? And so just like, quick two things, but there's probably a few more and.
[ 0:40:21.000 ---> 0:40:32.000 ] Speaker A : Transitioning to more of kind of the career side of working at your companies and being a product engineer. What does the future of like, you join a company as a product engineer then?
[ 0:40:32.000 ---> 0:40:49.000 ] Speaker C : What I would say at like it's something we just started to define a little more clearly and probably it's much more scoped out at James's company. But I'm curious to hear but sort.
[ 0:40:49.000 ---> 0:40:50.000 ] Speaker B : Of we have two paths, maybe, I.
[ 0:40:50.000 ---> 0:42:18.000 ] Speaker C : Don'T know, but there's sort of the traditional sort of IC path which is like continuing to become med senior staff level engineer and continue to influence product decisions, especially if you don't want to be a manager. Right. I think there's lots of folks that we meet with who are exceptional, who end up getting blocked at the top of their game, being like, oh, I don't really want to manage, but I can't really do anything after this. We believe actually that if you are a product person, you can continue to influence product very deeply without necessarily wanting to manage folks. And so that's probably the path on the side. But then obviously, if you end up wanting to manage folks, there's obviously the product engineering lead, and then there's the head of engineering, there's the VP of engineering, CTO all the way up that ladder while continuing to be focused on product or the other path is like you become a pure product person and kind of become managing that managing the engineering teams kind of gel and becoming that translation layer between customer success, sales engineering and actual customers. But yeah, I think we're a little far away from that at the moment. Still a 15% company, james yeah, I.
[ 0:42:18.000 ---> 0:44:05.000 ] Speaker B : Think we have a pretty similar set of past. Right. You can level up, like you said, into kind of a product lead role or an engineering management role and yeah, I think what's interesting at Volley or unique is the fact that we have so many of these kind of games that are fully staffed teams, you can actually move around a lot. Like if you come in at Volley as a product engineer and you're working on Jeopardy, maybe you'll work on that for a year and say, hey, I really like this songquiz stuff. It sounds like you're doing really cool stuff over there. We have a very kind of fluid.org in the way that our product engineers can move between our games. So I think that's really unique and something people really value about volley when they get here is they can learn the Stack, they can ship some awesome stuff on one game and then request kind of check out another. Game a year later or two years later, whatever it is, and they're bringing all the knowledge from their game into the other game. And kind of that helps the business. And I think because of the way we've structured the architecture where all the games are running on the same internal engine that's cross platform, it's a super quick learning curve to get up to speed on the new game that you're working on. And maybe it'll be like a brand new game that we're launching and we're trying to staff up that team. So there's a lot of really cool just initiatives to work on all the teams but I think the ability to kind of chart your own course is pretty unique at Volley and really valuable to people leveling up in their careers really fast.
[ 0:44:06.000 ---> 0:44:16.000 ] Speaker A : What is your favorite story from your company that is related to someone who works in product engineering? Can be technical, can be nontechnical.
[ 0:44:16.000 ---> 0:44:20.000 ] Speaker B : Well, one thing I think that is a good story is just like.
[ 0:44:22.000 ---> 0:44:22.000 ] Speaker C : Don'T.
[ 0:44:22.000 ---> 0:45:49.000 ] Speaker B : Be afraid of don't think too far ahead, I think because if this sounds interesting about being a product engineer and working at a small startup I know. Sure, a lot of people here are not used to working at startups or have mostly worked at larger companies. And that can be itself challenging or intimidating. But what's amazing about these smaller companies and working in these customer facing roles is that you learn so many critical skills that apply no matter what happens in your career and you can level up really quickly in a startup and that's really valuable for your career. And just the story I was going to say is why combinator has work at a startup where you can apply to work at companies like and Volley, but there's even work at a startup intern programs. And we've hired people right out of master's programs. They were an intern for three months and now they're managing a team of twelve a few years later so you can level up really quickly. And also from my perspective, I love that this work at a startup program exists because we get amazing applicants through that that have gone on to do incredible things at Know.
[ 0:45:49.000 ---> 0:47:28.000 ] Speaker C : Second, that what James just said. I think it's super. By, by reaching out or know, putting in an application or just shooting an email doesn't mean you have a binding commitment to join that company. Just kind of come chat with us. It's our job to kind of show you that it's possible in the end of the day. But I would say the one thing that sort of strikes me is we were like a two person company for a long time and that was because we were just kind of iterating till we kind of really found product market fit so close to 1218 months. But the first person we actually hired was this person. He was like 19, kind of just was hacking around, right? Never talked to a customer before but just kind of building things and right now he kind of obviously a little older but sort of very much is like every day. The first thing he does on our daily kind of slack is here's the crazy insights I learned from customers every week. So every conversation he has. He kind of summarizes things about it and then kind of shares that with the engineering and that kind of shifted mentality from not knowing how to and this person was not like a first language English speaker either. And so it was kind of like, for him, it was like a combination of all of those things to come in and get himself up to speed, then also make sure he brought everybody along for that same customer journey, which I think was quite beautiful.
[ 0:47:32.000 ---> 0:47:39.000 ] Speaker A : Amazing stories. Thank you both again for joining us and sharing more about what product engineering is at your companies.
