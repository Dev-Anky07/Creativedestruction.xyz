- Paige: With us today, we have three three guests who are all early in founding engineers at YC companies. They'll share a bit about their backgrounds, their companies, and then we'll dive into Q A after that.
- Gar: I work at Cambly, and we're an English tutoring company. Jen: I'm a software engineer at Finley, creating debt capital management software. Jordan: I've been an engineer at Explo since April of 2021.
- As a founding engineer, you are helping define not just your engineering, but a lot of your culture. How did your day to day role end up differing from what you were told or what you expected?
- How does Founding engineer relate to, say, CTO or Senior VP or some of the titles you see at more established companies? Is there some sort of mapping? I think it really depends on your company.
- The role definitely changes as the team grew. Inevitably, you have all this institutional knowledge, and so people start looking to you. And so then it just moves into managing, growing the team, onboarding new people.
- At Finley, I would say I get to talk to probably at least 75% of the people on our team on a day to day basis. We work really cross functionally because we rely heavily on our capital market side to make sure what we're building makes sense for our customers.
- A lot of what I do is kind of more soft, skill based. At our company, everyone helps wherever they can. For me it was these skills that I didn't expect to learn when I joined. It's definitely a harder mentality to keep once you realize the scope of what you have to do.
- As a founding engineer, what do you think the proper division of responsibility is between writing or participating in a prototype or an MVP versus hiring. And then the second half of your question was I think generalists are much better early on. It's probably different for every company.
- Gar: Should I continue coding or should I move into more management role or product role? How do you face that kind of decision with the founders or just knowing where do you fit in?
- Finley: Open communication with what your career aspirations are will really help shape that conversation. I think that's the big differentiator between a startup and when a startup kind of starts to move away from being a startup. That open communication and flexibility of role is an important culture to keep.
- Having open communication and transparency even through the. Hiring process helps you choose the clear winners. You should see if you even think there's good product. Maybe building off of that.
- Do you like the people that you're going to work with? Because that's really kind of going to shape the culture of the whole company. Happy people make a successful company. Having a team was a big part of my decision to join the startup I'm at.
- The scariest thing in these first couple of years of working at a startup is blame. You need to not have a blameful culture or the startup is not going to be a good place to work.
- Gar: I decided I want to work at a startup or just somewhere where I would have a lot of hands on experience. In less than 24 hours I had a bunch of people DMing me and messaging me. It's a very active job platform and that's how I end up connecting with current company.
- People have been asking questions about weighing compensation when choosing to work at a startup or working at a bigger company. Just because it's a smaller company doesn't mean you're going to be compensated worse than a larger company. For me the experience was the dominant factor of why I made the choice I did.
- When you join a smaller company, there aren't as many people who can mentor you. Instead of the word mentorship, I would use more like knowledge sharing. At Cambly, through good code reviews and a lot of talking back and forth, we became experts in React.
- The biggest thing is adaptability as a positive trait. The negative characteristic is if the person has no interest in doing anything outside of just one thing. Being able to do more than just write code is really important.
- Being a founding engineer is more than just engineering. Do some introspection to see what your strengths are outside of engineering. When you're interviewing, emphasize those other things other than your technical experience.