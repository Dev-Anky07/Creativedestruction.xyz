- Thank you, of course, everybody, for joining our office hours today. We're joined here today by some of the engineers from the Arbitrage team as well as some. Can we actually go around and give some intros?
- Ariel is a core contributor to the Graph protocol, working at Agent Node and leading the Smart Contracts team. Simone is a solutions engineer at Azure Node, focusing mainly on decentralized network migration and depth integrating with the graph in general. Pranav focuses on the network migration indexer participation.
- Both teams are going to be working on Bridging as well as moving over to Nitro near the end. If you do have any questions that you want to ask the Arbitrage team or the graph, please either leave them in the comments of the tweet that I'm about to pin.
- Migration to L Two creates some challenges because we now have a split network. The goal would be to really have everything migrated to TL Two. But it's not going to be easy to do it in one go because it needs to be user initiated.
- Fred: How to minimize the complexity and the number of transactions and engagements per user going through this flow. In our custom bridge, we ended up adding a similar deposit and call functionality, but using a whitelist. Even with the whitelist, we did have some challenges in terms of the whole calculating gas when you're sending the retrieval tickets.
- Paulo: We're proposing introducing this drip function that certain people can call. And this function will generate a retrieval ticket that sends tokens and some data to l Two. That ticket has to be redeemed on the l Two side, hopefully pretty quickly. We thought about using relay services.
- The core of the challenge is these two independent environments with their own FIA markets. These environments are asynchronous with each other. I think it's very early days around this stuff as well. We've seen a couple of cross chain applications and the dance space is still unexplored for different things.
- The idea is to get most of the protocol migrated to L Two. It's a way to send actions at a distance from L One to n L Two s. Not try to rely on synchronization, learn as much as we can from this process and maybe improve it.
- Nitro is going to be this system wide upgrade to Arbitram. It'll use a fork of the Ethereum software directly. Better but closer compatibility with Ethereum itself, which makes developers lives nicer and easier and also lower fees. The next step is so the main net chain will eventually become a Nitro chain.
- The idea is that Nitro is something that you can be upgraded in the sense of everything will look the same for developers running on the current deployments. The biggest change has to do with gas accounting because we're using a custom virtual machine now. And now we have safer retrievable tickets.
- Is it going to enable compression initially or the call data compression, or is that something that is going to happen after the Nitro migration? I believe we will be supporting compression out of the box. We charge your transaction based on how compressible the transaction's call data is.
- What are some of the coolest features that you have in the contracts are spotted in Arbitram while developing? And what are some that may be missing?
- On our token bridge, a feature that isn't actually used, is Tradable Exits. You can start an L 212 one transaction, and everyone knows it will reach there after seven days. And something that I think that's really cool that you guys have been working on is the Reelers and the keeper stuff for actually maintaining this crosschain stuff.
- Paulo: I do think we talked a lot about retrieval tickets. We're the first really, the first EVM compatible roll up to go live. I imagine I'm curious if over time retrievable tickets will become more of a more general standard. Arbitrum is official hosting the Twitter space.