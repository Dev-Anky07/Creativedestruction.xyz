[ 0:00:00.000 ---> 0:25:18.000 ] Speaker A : Very exciting. And thank you, Sam, for having me. Sam and I have known each other for a long time because we were fellow sequoia companies and we met in the early days of when he was on his company journey. And so it's cool. So what he asked me to talk about today was a little bit about sort of the hardware journey of building products. And so what I wanted to do is give you guys a little bit of an overview of Jawbone, what we do, how we think about the world, and that informs how we build products and then go specifically into the process of how we design, how we develop and how that all kind of comes together and sort of what we do to change categories. So, first off, I always like to start with sort of the broadest thinking. And the way we look at the world is we think of ourselves at this intersection of really crafted innovation in engineering that's almost invisible to the user in terms of its functionality. And that's at the intersection of even beyond design. We've been doing design products for well over a decade now. We think of it as going the conversation has shifted even beyond design into beauty. And it's that intersection of engineering meets beauty. And the whole point is to help people with a better life, with technology. And largely speaking, we do play in this world of what everyone's talking about now is the Internet of things. We were there much longer before there was such a moniker. And the way we think about that is it's smart devices that have computing power and connectivity with sensors in them that are measuring all kinds of things. They're wirelessly connected and they're all talking to you. And we started on this journey really, really early, right? Actually out of engineering school here. And we were developing core technology. We decided to build consumer products around that. Our first consumer product was the headset. We sort of created a headset that became a wearable computer. It was the first job on headset. That was when we started thinking about wearable computing. We then invented the wireless speaker space around Bluetooth audio. And I'll talk a little bit about that journey. And then most recently, we focused our attention on sort of this whole wearable health revolution and using a lot of the sensors that we did in the first generation of headsets and applying them to other parts of the body to understand more about users. So our view of this world, having been here for a long time, is that it's a little bit of a mess in the Internet of things. Everything in the world is smart and connected and everything has an app built to it. That doesn't mean that it's easy for users, right? Your microwave, your refrigerator, your car, your Xbox, your Xfinity, Comcast, everything has an app. It doesn't talk to each other. It's really confusing for the user. So we think that there's a desperate need for an organizing principle around all of this. And this is sort of the core of when we start to think about how we build and opportunities to sort of create products. We think about where is the world going? And so if there is going to be such a world that everyone's talking about around the Internet of things which is happening, you do desperately need these organizing principles so that it's easier for users to understand how to come in and interact with these services. So we think the thinking needs to shift from being less about the actual things to being about the individual user. And so, ultimately, when everyone's talking about wearables and you have things like Google Glass and you have the stuff that we do and Apple Watch and all this stuff, ultimately what we believe is that when you have things that are on your Body 24/7, they become this kind of perfect context engine for everything in the world around you. Right? So my phone is not on me. It's in my jacket or sometimes on the charger, but my up is on me and it understands everything that's happening with me. It's tracking my heart rate, it's tracking my respiration, it's tracking all these different things. And when I say context engine, I know I can tell the smart, thermostat my nest that I'm hot or cold. That device doesn't have that understanding. I can tell it's hot, that device. I'm hot because I'm sick. I went for a run, it's hot outside. I can tell your car that you're falling asleep, that you're agitated or irritated. So this is ultimately where we think the world is moving, is that wearables are going to be the center of this revolution around everything being connected and smart and they're going to drive what a lot of those interactions are going to be and how they're going to work, right? And so that's sort of the first principle that we think about when we start to think about, okay, where are things going and what should we build and how do we think about new categories, right? So in order for the vision of what we're talking about to happen, you actually need to be great at almost everything. We need to be great at what we call the full stack. We have to be amazing at building hardware. And these are hardware experiences that people have to keep on all the time, right? You have to wear them 24/7 because if you don't, then everything that I'm talking about is sort of a castle in the air, right? You can't actually create a service that people engage with or get lots of data off it to then go power all these other things if it doesn't start with great hardware. So that's where we start. We try to build these magical experiences in hardware. They're absolutely powered by software. We have developed world class software application expertise. We've got to be as good there from an engagement perspective as something like an instagram or WhatsApp. And then on the data side, we've got to know what to do with this massive amount of information and process it and push it and have it work for the user. So we really see ourselves as being at the intersection for the first time of a company that's doing hardware, software and data as three kind of equal stools that have to work together in order to unlock that experience around something that's on you, knowing what's happening and then talking to the rest of the world around you. So that's a pretty key piece of what we do. I think it's different than what a lot of other companies do and it allows us and requires us to play at all levels of stack. Now, this was a complicated thing for us to put together because typically people who are great at hardware understand mechanical engineering, electrical engineering, how those things interact, how you build at scale, how you build tools, et cetera. They're not typically great at building software and services, right? It's a very different discipline, a very different skill set. So when we first put those pieces together, that created a lot of really interesting friction in the company. Our software and our application team was so used to moving really, really fast and iterating whereas in the hardware world, you've got to take your time because your iteration cycles are much more deliberate. You have tooling that takes 16 weeks, you can't just tweak stuff and you can't hack it in the same way. And so what was interesting to see as we put all these pieces together, the hardware team learning to move faster, the software guys thinking more about how do they resolve experiences before you actually have to ship it versus just throwing something out and a b testing it. And then the data science sort of informs all of that with sort of more information to make different kinds of decisions. So how do we think about how do we go, how do we build products, how do we change categories? First of all, everything for us is a system, right? We don't think about it discreetly just as a piece of hardware, discreetly as an application, or discreetly as a platform. We think about it across the whole thing. And so this is an example with up where we have these tracking sensors on the body algorithms there it connects to the phone where you have this engaging application and service experience. We use the sensors in the phone that talks to a lot of stuff that we're doing in the cloud, where we're taking all that information, driving insight on it. And then we have a huge platform of thousands of developers where they have thousands of apps that then plug in and also create more experiences. And so we think about it across the whole spectrum. And I'll come back to this system think in a second. So what does the actual process of creation look like? And this is fun for me because we don't actually talk about this very often. We keep it confidential and private. And I know that we are talking now that we're on sort of a live cast everywhere. So it's fun for me to talk about this for the first time because it's quite a deliberate process, right? And this is a little bit at what it looks like. This is kind of a map where we are very unbridled in our imagination. In the exploration phase, we start to validate some of our concepts, bring those ideas tighter and tighter and tighter, and then we actually start to build a product, launch it, and then iterate right? That's the simplest way to look at it. I'll take you through each of these steps. So in the exploration phase, it is very wild. It's imaginative. We think about the vision of where the world's going, what our strategy is, what does the brand stand for? And we think of a lot of what you guys do here. You're dreaming. You're imagining it. How do you disrupt what's the future going to look like? It is a little bit science PROJECTY sometimes. And we talk about it in that way. And we do build from inspiration and insight, and it's sort of raw creativity. And we want to create we try to create a form where that's okay, because a lot of times in companies, that gets lost. And then when we start bringing it to early validation, I always say, like, look, everyone, when you're doing this stuff, you have to now take those concepts and prove them a little bit. Like you do a PhD thesis, right, where you have your conclusions, you've done your empirical data collection, and you start to say, hey, look, here's where we see it going. Here's what it's going to do, right? And you outline the story. And then once we've sort of signed off on that phase, that we think, okay, you know what this theory is, right? We start to go into a concepting phase where we start to really think about what is the experience and what's possible. And this is another interesting opportunity for innovation at a more specific level of how this thing will come to life or what it is and how would we sell that experience and how would we tell that story. And then we decide that it's a program and it goes into a heavy planning phase where we start to look at and say, okay, we're doing this. We've got to ship it. There is no turning back, right? What are the trade offs between all the creativity and all the ideas we want versus what does the physics dictate? What do battery power or all the different constraints that we have and start making those trade offs and start to look at, how do we pull that together? And then we move into a development phase where it's a handoff between various stages and really various functional teams in the company. And you pull it together and you're solving problems as you go. Implement this and you launch it and you learn and you see what users think. And then you start to think about, where does this stand in that experience continuum that you've been imagining? Where the world's going to go? What have we achieved? What haven't? What have we learned from our users? How does that change what we're thinking? And then we start right over again. Right? So that's the broadest way to think about it. A little bit deeper on the exploration phase, right? So it is very much like a building and tinkering process, right? And a lot of it is driven by what we call Demo Fridays, where people kind of have an opportunity to go showcase their work because we find that that's a great way to pull it together, pull it in a form that others can consume it and give feedback. Right? And it is a show and tell, obviously. Hackathons are a big part of it. There's lots of data that gets driven. And it's led by our strategic development team, which is traditionally called sort of an R and D team. And there's participation from product and engineering, both hardware, software. But they're sort of taking a backseat and they're looking at what these explorations are, right? And the executives in the company at this phase are more of a sounding board. They're there to poke and prod and tell people, hey, think about this, or did you try that? How does that work? Right? In this phase, in order to move to the next threshold? We think about it literally as, hey, would I give this guy 50 grand? It's a little bit like an angel investment, right? Would I give this guy 50 grand to go explore this and see if there's a there there is. There something to and our CTO is a sort of final decision maker. He gets to sort of pick those things internally and say, you know what? I like all the feedback. This is the one I want to go chase down and see what happens. Right? So then we get into this validation phase, and this is where it starts to get really interesting. Still led by R D, but they're really poking at it and they're saying, how does this work? We have these leadership meetings with the broader cross functional team. I have to show results. I have to go through a scientific process to outline why this works. Why is it going to happen? And you'll hear, this is really when we start formulating a really important tool that we use in the company, which is what we call whys defining the why are we doing this? Why does this exist? What problem does it solve? I'm going to come back to that in deeper in a minute, right? And so at this point, it's still an R D lead, but this is when a lot of our industrial design team, eve, Bahar, and a few project guys, they come in, they start to think about, okay, how can I pull this concept into something physical if it's hardware? And how's that going to interact with the rest of the pieces of the system? Our Product experience team is still also driving a lot of the core values and what the storyboarding is, but it starts to become a lot more real. This is when we start thinking about, okay, how would we build this? How expensive is it going to be? What's the budget going to be, et cetera, right? And at that point, we start to really validate, can we actually build it, or do we have to wait three years for batteries to be there? Or do we have to wait for this other innovation to happen? Or do we have to wait from a budget perspective or whatever it is, is there a business Viability? And then we start to really start to sketch kind of briefs. And this is where I come in and make the final decision on, okay, I think there's really there there, and we can now take this to the next level and get it into a play, and then we go into the concept phase, right? And this is now when the responsibility shifts from the R D folks to what we call Product Experience team. And the way we think about product experience at Jawbone is sort of what everyone thinks of as sort of conventional design. So from industrial design to software design to audio design to anything in that touches that experience, we have writers on that team storytellers. We have ID, people like Eve who are genius creatives. We have amazing app level designers, graphic designers, everything. It's all in one team. And we call that product experience. And their job is sort of from bits to atoms and back and all the way through to unify as one organization. And that's when they sort of take a hold of this and they start to really kind of work out. And this is what we call when you're starting to really drive the whys, right? Thinking about what's possible. There's a lot of innovation and creativity now in the actual implementation of how we're going to build and create a product. And we start to say, like, what are the most important things in that product? What are the most important problems we're going to solve? We call them hero experiences, right? What are we going to do? What is the bar that will be acceptable, et cetera, right? And at this point, we start to really resolve what we call these whys, which I'll show you again in a minute. And why is that different from what anyone else has done from the competition, from the category, and then where does it go? Right? We don't like to do just one off things. We have to see a broader vision. And this is part of that creation experience. As we look at where do we think the world is moving and how is this thing going to be a stepping stone to that ultimate end vision? And that's where the roadmap starts to get fleshed out. Again, I have the ability here to come in and sort of be the final decision maker with my team and say, yes, we're going to move this to this next phase. And here is also where we look at some of these things. And when I get into some of the specific examples, we have fast track programs, right? So we took, for example, the jambox when we were in this phase and we said, we're not going to go through the other phases, we're going to go straight into the development process, right? Because we want to get this thing out. We want to test it in market and move really quickly. So we have the ability to sort of circumvent our own process now and say like, okay, let's go, let's go really rapid and fast track it and recalibrate kind of the go to market possibilities, right? So this is when we after this stage now, it shifts from that product experience team to our product managers who are really defining the business plan, when's it going to launch, when's it going to get into the retail calendar, what is the software release cycle really? Prototyping. You're actually starting to feel it and you're starting to make, as I call a lot of those trade offs, we're like, okay, we wanted to build this, we can't do that, but here's what we can do. We want to be this way. We want these functional experiences, but we're going to sacrifice battery life, whatever it is. That's where we start to really kind of pull those decisions and start looking at it. And it's really a big juggling act, frankly, at that point, right? And so the product guys are driving that and that's when, again, we sort of look at and synthesize all of what we've put together and we say, okay, does it actually cross enough things off our list? Does it meet that minimum viability? Right? Because we always start with, as you can tell, like, this very big wish list of what's possible and what we can do. And then we start to whittle it down and say, does this cross enough of the value threshold that we think that it's worth pursuing and now can actually move it into the development phase where, again, product management continues to lead it. But now you're starting to really get deep. And this is where engineering comes in and is really starting to sign off on, like, we can build it here's a time schedule and how we ship. And then again, the product team is looking at how should we go deeper on this, how can we increase engagement? Where the little innovations, what are the tuning, what are all the things that we need to do to sort of make that? One of the things that we've been fortunate to have is a lot of wonderful response to the products that we built. And we take a lot of care and time and detail, really in sort of this development and concepting phase around little details that create these magical experiences. So, for example, when we turn on Jambox, we have this pretty cool sound design that goes and that took months to come up with the right audio tuning. We work with a lot of different choreographers to create that sound, but every time someone turns it on, I see them smile and they laugh. The feel of the rubber prototyping. There's one manufacturer in the world that was able to make the rubber at the quality and derometer that we wanted and the colors that we wanted for the first Jambos, right? So all of those little magical details, how to resolve even in software, right, when we had the first up and when it plugged in and your sleep graph showed up, even just the animations of how the bars would show up and the way the cards would flow in and out. That was a detail that we thought about, how is this going to interact? How is the user going to experience that? How are they going to feel it? Right? So a lot of that kind of stuff happens. Even at this stage where you signed off on a program, it's going, but you're making those kinds of decisions all the way through and you're trading them off and you're doing it in the context of this bigger picture. And continued innovation is an opportunity to keep refining and keep doing all that stuff. So how do we think about it now, kind of at a broader level, sort of what is the framework for how we think about these signature experiences? Well, we do start with these whys, which is that articulation of the problem that we're solving and then the themes around how these become actionable concepts, right? And then what we do is we build these cross functional pods that take a person from the product experience team, a person from hardware engineering, a person from software engineering, a person from the data team. And we put them together and they're kind of a person. This is the pod that owns that theme or that track. And they continue to sort of build that out against the hero features and inside features and how we put that together. So I'm going to go in now into more specifics around what we call these whys? Because this is where I spend a lot of my time really asking the question. And what it does is it serves as a really interesting framework for us to be able to come back and say, hey, do we meet those questions that we asked? Does this thing actually do it? And it serves also as a really good guidepost for a lot of our creativity and a lot of our innovation. So that's not unbridled, right? So it really comes down to a very simple question for us, which is what is the user problem that we solve through this experience? Whether it's in hardware, software, data, platform, whatever it is, that once we solve it, people can't live without it, right? They may have an absolutely burning need to go solve this problem and they're looking for a solution or it's things like that. Once you have it, you never thought you needed it, but now you can't live without it, right? Again, the Jambox is a great example of that. We talked to some people when we were thinking about making that product and it was interesting because little story for you guys. When we launched a Jambox in the fall of 2010, the market for wireless speakers as a percentage of the overall speaker market was 0%, right? 0%. Last Christmas, which was Christmas of 2013, it was 78% of the market. Right? And so in few years, we were able to transform this entire industry that had been around since the turn it on its head. And if I had gone out and asked a bunch of people and I said, who wants $199 speaker for your mobile phone? I guarantee you that in that focus group, 0% of those people would have said that I want that thing or I need it, or that I'd be willing to pay for it. But yet, when we did it, it transformed an industry, right? And this is where these whys become super important, is just really focusing in on what you're doing, right? And I'll go through one example in the audio space, which is the Jambok example in audio. And then I'll take you through a little bit of how we did it in up, in particular up 24. But it starts with what we call kind of our category strategy. And this is the sort of experience framework, right? And our view was, look, all of your content and media experiences are now in your phone. They're no longer in your ipod or your computer. And so we need a different way to interact with it that needs to be as mobile, as portable, as high quality, right? That was our fundamental thinking. And then we said that experience need to be seamless across time and space. You go anywhere through it, different your car traveling in and out of your house, around the house, that was fundamentally what we were doing. And we said that's the whole point of why this category should exist. Right? And that was the human problem. And then we said, okay, what's in it for Jawbone? Right? Why should we do this. And so if you think about that broader macro context that I was talking around the internet of things for us, this was our entry into your home, right? And so while everybody talks about all these new things in your house from lights and thermostats, and cable boxes and fridges and smoke alarms or whatever being connected, media is still the killer app in your house. That's where we sell millions and millions and millions of units, right? So we said, well, speakers can be our entry into that world that's around you and it can be the hub of things that we want to do from a software and service perspective in your home. So there's this interesting strategy both at solving user problem but then why does it matter to job on? So those two have to go together because A, we're not in philanthropic, not for profit industry, but B if you do this well, it allows you to keep doing great products and allows you to keep moving forward and doing interesting things. So that's sort of how we put that together. And then we built this sort of what we think, what we call the experience continuum is where is it today? Right? And when we started it was a Bluetooth speaker, right? That was the core enabling technology that allows to connect to stuff. Where do we think that it's going to go tomorrow? And then what happens when we can dream in the future, right? And we start to really try to live in tomorrow in the future and then start to think about what we build today as a stepping stone to graduate users starting in one place, continue to move and continue to move through that. And that gives us a view of how we also make these trade offs, right? Because we say, you know, we're not going to put this into this product, but we got a space for the next one and we know that we can move users to that and they'll be ready for it, right? And that's a lot of the way we build stuff is we sort of define that experience continuum, right? And then we do talk about this a lot. We don't think of ourselves as a hardware team or software team or data company or whatever it is. We think of ourselves as an experiences company, right? It's not just about that physical device or the feature, the object. It's about the system. It's about how the pieces come together. And so when we start to define these, whys they become the problem statement and we say, okay, how do we use a piece of hardware? How do we use a service in the cloud? How do we use an application, a sound, a button to solve this user experience problem that we have? And what's the right distribution across that system of where you should attack the problem, right? And where do we need to innovate. And where do we need to pull it together? So that's a big part of the thinking that helps us do it, right? When we think about these hero experiences, right? We say it's really around the context of why it's magical to the user, right? And then, like I said, the system is a flagship and then it has to go to a level of emotional connection, right, where you feel without it, you're lost. Like, I'm going to go back home and get it if I don't have it. Right? And so those are the kind of principles that govern all these things. And we have to keep asking ourselves those questions. Is it doing that? So we pull this all together. An experience framework. This becomes essentially a brief for your engineering team and your design team and all the people that work on this in the company that they can go back to and say, what are we doing and why are we doing it and how does that work? And then how do we create against that? Right? And then we have a sort of whole process. Blueberry is one of the internal code names, but the user experience process starts with a bit of research. So we do actually listen to users and talk to them, but we talk them in a very specific way, start looking for those key insights, we concept it and then we start to bill, right? And this is why we go define those lists of consumer problems, the principles, how do we think about approaching that, what are the solutions and then what's required in the product to make that happen?
[ 0:25:18.000 ---> 0:25:28.000 ] Speaker B : Sam, could you talk about how you balance the fact that the user would never have told you they wanted to pay $200 for a wireless speaker with user research at the front of this process?
[ 0:25:28.000 ---> 0:32:40.000 ] Speaker A : Yeah, well, there's a lot of layers to user research, right? So what we look at that's a great question. You guys probably aren't familiar enough with this yet, but there are sort of standard tools for what people do in focus grouping where they say, Would you try this? Would you do would you pay this? Do you want this feature? Do you not want that feature? What do you care about? That's one way to do it. And what you don't usually get there is really great answers. We ask different kinds of questions. We say, how much music do you listen to when you are with other people? How do you play that music? Do you listen to it on headphones or do you listen off the speakers on your phone? Okay, how often are you with other people? How often do you want a personalized experience? How often do you want to share? So we ask a lot of questions. We just ask different ones and we don't ask them specific things about do you want this or do you want that? We ask them how do they behave? How do they live? And you say to them, hey, if you had something that allowed you to take a great example is ipod. If you said to somebody, if you could put 1000 songs in your pocket and take them anywhere, that's cool. Not, do you want a digital portable music player? So again, it's at a price that was more than your phone, right? So you sort of have to separate what are questions that you can ask that are going to help make you smarter about your thesis versus trying to get somebody to validate it for you, right? And I think that's the real separation. No one's going to tell you what to build. If they do, then they should do it right and not you. And so you're the one who's making that decision. You've got the thesis, you've got the creative idea, you've got the innovation. You got to use these people to help you make it better and to refine your thinking that's the difference makes sense. Got it. Okay, so I'm going to switch over to some up 24, which is the product that we've had in the market, our wireless product for health tracking. And the whys of Uptwear 24 are really simple, right? Well, first of all, let me start with the whys for up the idea. There was there's so much that we know about the world today through Twitter, Facebook, social media, access to the Internet, Google, et cetera, but we know nothing about ourselves. We have no idea why. Some days I sleep 8 hours, I feel terrible. Some days I sleep three, I feel like I just have no idea. Right? And so our thought was, could we take a lot of this sensor technology, help people understand more about themselves, and start to then make better decisions about how they live better? And so that was the first product. This was the second product where we said, okay, great. Now that we have wireless connectivity, it's not just about Bluetooth or wireless. It's about the fact that I can use that real time flow of information to understand what's happening with me and go and take action on it. Right? I can get the data in a more meaningful, relevant, contextually, important way at the moment that it matters. I can also get back guidance in a structured way that can help me go do things. And I want that ongoing encouragement because everybody knows that they want to be better, but they fall down or do whatever, and they want a fluid way to interact with us. So this is what we were sort of building in up 24, right? We had this very crisp set of five things that were the whys of why we're building this product and why we're doing it. And our point of view was that we had this sort of fundamental narrative going back to the experience framework where we said everything we do and up is about helping people track and understand them track themselves. It was understand which is taking all that data and converting it into knowledge. And then the third part was act. So track, understand, and act. That is our narrative for everything we do in the kind of wearable health space, fundamentally, and it will be for the entirety of what we do. It's sort of help people get more information about themselves. Data is great, understanding is better. Convert that into things that they can create real knowledge that they can then take action on. So anything that we can do to keep the device on, get more information, help them be engaged, and then find ways of guiding that behavior was really interesting. And this is the sort of framework for the system. And then you can start to think about, well, that designs how you build your data infrastructure, your insight system, how you process it, how you build the application experience that surfaces it. And this is a little bit more of a blowout around. Track, understand, and act. Right? The tracking part is really fundamentally about the hardware too. It's sort of how do you design the batteries, how do you design the embedded systems, the materials, the way it latches on you, how easy is it so that you create the habit of keeping it on your body, right? Then you got to take all that data. And it's not just visualization of information. Like if I told you you guys'heart rate was 75. Is that good or bad? Who knows the answer to that question? I don't. It depends on what you're doing and who you are and what's happening. So just the data surfacing is not enough. You got to contextualize why that matters. Turn it into action. That's the third part. Right, is action is key. So let me understand the data. Let me understand that when I work out at 04:00, I get four more hours of deep sleep at night. That's awesome. So let me get Ryan minder at 04:00 to go work out or do whatever, right? And that's what we've built. And that's a lot of infrastructure to sort of create that experience. But that's how we build software, that's how we build hardware, that's how we build sort of the whole system. And then often we will talk about different kinds of users and what they care about and what we think our user base is made of and who's more into weight loss, who wants the sort of social acceptance, who are people who are vain that just want to look better. It's true. So there's lots of different things, and there are people who have sort of medical reasons for they use our product and we design different kinds of experiences, right? And we think about using the platforms like the phones and ways to push notifications and as part of the system think, right? We think of notifications as a tool for behavior. Change, right? And then we actually start to go map out these things. What is a smart action? Is it real time? Does it feel customizable? Does it feel progressive? Does it help me? Is it really tailored to me? Right? And then for this particular type of user, we go out and storyboard. And then these storyboards go to our design engineering teams who work together and they actually start to build off of this. And what this does for us is it creates a nice set of constraints. My experience has been constraints are really great because they serve as opportunities to resolve, to refine, to simplify and push you to find the right answer that it will solve a user problem in the simplest way. Right? And so we create a lot of those constraints around what we're doing. This is the sort of storyboarding for getting somebody to the goal and how they do it and what we use in real time. And then we put in sort of the secondary experiences, right? Which is if we can do this and we can fit it in, it's not too cluttered or confusing. We'll put it in. So that's a little bit of a snapshot and how we build. And then we have a few minutes left. So I'd love to answer any questions.
[ 0:32:44.000 ---> 0:32:46.000 ] Speaker B : We got about 50 minutes.
[ 0:32:47.000 ---> 0:32:47.000 ] Speaker A : Go ahead.
[ 0:32:48.000 ---> 0:33:18.000 ] Speaker B : So let's say you have this product, right? You have all these features that you want all these things satisfy and you're about to attend to design process, right? How do you approach the whole problem? How do you break it down so that solve this and satisfy this problem? Each design feature is not mutually exclusive. How do you approach it holistically while solving problems? Can you repeat the question for the report?
[ 0:33:18.000 ---> 0:35:33.000 ] Speaker A : Yeah, I think the question was when you have a number of different features and functions that you're trying to build, how do you look at it at a system level to understand not within that one silo, what the trade offs are, but what the trade offs are across the entire system? I think that's the answer to your question. You do exactly that. You don't think about it in one silo. You have to force a lot of when it's a small team, it's really easy because you guys are all sitting around a table, you're looking at each other, you're making those decisions in real time. As you get bigger in a larger company, you have to force a lot of communication where everyone's in a room and that person says, you know what, if you constrain me in this way, then I can't get the quality spec that you need me to make. And this guy is going to say, well, if you do that and you give me that much space, then I can't fit all the algorithms in at the battery performance that you want. And so when you start to look across the system, you start to see everyone has to share what their pains are and they actually understand if I make this trade off, it's going to affect me over here. And so you have to put them all together in a room and start hashing that. But what's on the board and on the walls and on everywhere is what are we trying to do? And does that trade off still meet it across all those different silos? Because everyone's thinking about the trade offs in their bit and they know what they need to accomplish, right? But again, it's how does that affect the whole thing? We just went through this with Up Three, which is a product we're shipping in a couple of weeks that sort of defined the next wave of what's happening in the wearable space. On the health tracking side, we invented a totally new sensing system, right? There was raw science that had been developed that we productized really fast and even just trade offs on what the electrode materials were had effects on reliability, sourcing signal performance and these guys weren't talking to you? We had to get in a room, do daily calls for 3 hours where they're going through each of their things. It's tedious, but we're figuring it out and we knock it down. So when you're small it's really easy because you just draw, look at it. But you have to always have that definition of what you're trying to do across the system. And that's why a lot of what I was talking about was much higher level. What problem are we solving? Where does it go over time? And how do all these pieces inform it? Go ahead. If a startup wants to build a.
[ 0:35:33.000 ---> 0:35:40.000 ] Speaker B : System, eventually, should it start focusing on one small thing or should it start looking at systems itself and how to build it all together?
[ 0:35:41.000 ---> 0:36:27.000 ] Speaker A : I think system think it's a mindset, right? It's not actually a system. Right? There are simple systems, there are complex ones. A plane is a very complex system, a car is a very complex system. There's other products we make that are much simpler. Phone is a complex system, an application you should think of as a system, right? And how all the pieces work together, your storage, the front end experience, what you're doing, the connectivity, that's all a system. Right? And so that's more what we mean about system. Yes. For us, system is hardware, software and data. But I think within even anything there's always system think. And so it's more just thinking about how the trade offs work across all the different pieces as they come together. Does that make sense? Yes. Go ahead.
[ 0:36:28.000 ---> 0:36:44.000 ] Speaker B : I have a question. What's the decision making process between creating related products in the same space? For fitness tracking, there's different versions of up, or for jambox, there's different versions. What goes into that?
[ 0:36:46.000 ---> 0:38:12.000 ] Speaker A : We do have a grand unified theory at some point around how these experiences come together and what happens. And it touches a little bit that point that I was making to you around a context engine, when you have things on your body that can make everything in the world around you smarter. Like, if I know the emotional state of a user, I can tell Spotify what song it should play you on the jambox, right? I can tell the TV that you didn't like that commercial, they should fast forward the next one. Or I can tell you not to watch Game of Thrones on a Sunday night because you don't sleep well. Right? So you start to see how I'm serious, right? And so these pieces start to go together. And so we do think at that level, and then we start to say, what are the building blocks that get there? How do we establish credibility? How do we establish a distribution system? How do we establish manufacturing scale? How do these pieces start to come together? So there is a grand unified vision for us, and we look at different categories. And different categories have different dynamics. They move at different paces, they have different replacement cycles. A great example of this right now is what's going on with iPad and iPhone. We're all very used to replacing our phones every single year. iPads are not following that same trajectory. Right. So the replacement cycle is different, the use case is different. The problem it's solving is different. So you got to adapt to that. Right. You don't replace your Nest every year. It's a 15 year install. So how do they build in that kind of a world? And how do they think about so you got to think about your category, the replacement cycle, the usage, how these things come together, and the dynamics are different. Right, good.
[ 0:38:14.000 ---> 0:38:27.000 ] Speaker B : First of all, how you can with this unique pattern of the jawbone having the PPT background in the first place, and you think it's a better design, you have this idea, or you think the functionality is the more important.
[ 0:38:27.000 ---> 0:38:29.000 ] Speaker A : Which piece are you talking about? You're talking about the texture? Yeah.
[ 0:38:29.000 ---> 0:38:29.000 ] Speaker B : The texture.
[ 0:38:29.000 ---> 0:38:29.000 ] Speaker A : Yeah.
[ 0:38:29.000 ---> 0:38:34.000 ] Speaker B : So it's unique texture. It's like signature of every job or product.
[ 0:38:34.000 ---> 0:38:57.000 ] Speaker A : Yeah. And a lot of that was developed by Eve and our design team and sort of coming up with a branded look so that you saw the icon and you knew what it was. Right. Whether it's here or anything. So that was part of sort of our mission. We wanted to convey a certain emotional quality, et cetera. Some people like it, some people don't. That's sort of the nature of design. But that was all part of the same process. Right. Go ahead.
[ 0:38:57.000 ---> 0:38:59.000 ] Speaker B : Remind you on the question.
[ 0:38:59.000 ---> 0:39:01.000 ] Speaker A : Sorry. Yeah.
[ 0:39:01.000 ---> 0:39:13.000 ] Speaker B : So this is kind of something off one of the other questions, but when you iterate on a certain product, how does your process necessarily change and how do you take into account information you might have learned from, let's say like 24. When you develop, how does the framework.
[ 0:39:13.000 ---> 0:41:29.000 ] Speaker A : And the process that's a good question. I'm actually going to go back to that slides. The question was it's sort of not on the initial product, but as you've launched the initial product, what happens to your thinking and how does that evolve the process? Right? So I'm going to take it back to that slide that shows kind of how we create and the process flow right here. Sorry, I got to go through these builds. So it's actually a great question. So say this is you starting something totally new from scratch and you come out here and you do all this stuff and you get it to here and then you learn a lot. And in the first iteration of up in 2011, it broke. It didn't work. So we had to actually go back to the drawing board. And so what that did here is we actually ended up telling these guys a bunch of things that they should be thinking about and sort of unlocking a lot of problems we had to solve that they then started working on at a different pace because sometimes this will take years to come to fruition. We can dream a lot faster than what's possible, right? And so even at core technology levels, at sensor batteries, I mean, chips processing, what we can do with storage, like all that kind of stuff, we'll say, well, you know, what if we have those are the problems that we're facing. What if we start running different parallel threads to go fix that? And so we'll start doing some work here. They'll look at it in different parts of the process so there's room for innovation and all these different things. But we may see something here that we say, let's go straight into planning and development. We don't need to go all the way back, right? So we have the flexibility to sort of jump through and say we don't need to do these things. We know that it wasn't a big struggle for us to know to go from a solution that plugged in to go to wireless. I wasn't concerned that we had to do a lot of concepting and validating. I knew that was going to work. Right. So we can kind of skip through those steps if you know how to make those decisions. What this is more for us in a lot of ways is a way of kind of taking a lot of innovative spirit and creativity and giving it a very focused way to actually get out, right? And so that's the way we think about it. We have the ability to sort of go back and forth and skip over steps as necessary. Go ahead.
[ 0:41:29.000 ---> 0:41:47.000 ] Speaker C : I'm just curious, how large is job run now in terms of the number of employees? And then as we've added more employees, what were some of the kinks that you encountered of having not just a group of five, but more people working on one project and then everybody getting hurt or some of the organizational tools to facilitate that.
[ 0:41:47.000 ---> 0:43:16.000 ] Speaker A : Yeah, that's a good question. So the question is, how big are we? And then as we grew from few to many, how did it change our thinking around process and tools and how we kind of work together? Right? So we're about 500 people and we have a very remote set up. We've got an office in Sunnyvale, headquarters in San Francisco, office in Seattle, Shanghai, Pittsburgh, London. And so we have a very distributed team that poses a lot of interesting communication challenges, but also allows us to get where the talent is and where there are interesting people in specific areas that we're doing. I would say the single biggest thing that we continue to always try to get better at is that communication between all these different people working in different ways and forcing them to sit at the table and say, here's what I'm working on, here's where my trade offs are. This is what I think it should affect. You listening to other people and sort of understanding it and then remembering that we are building this system and here's what happens when all the pieces come together and then how do we solve problems? But it's a lot of that forcing that communication and doing things like I literally on up three, have a daily call that's two and a half hours with the entire team from Material Sourcing, manufacturing Design, sensor Firmware, Mechanical Engineering, all together. And they all have to sit through each other's updates, but then understand what those trades are. And I sort of force that communication. Go ahead.
[ 0:43:18.000 ---> 0:43:24.000 ] Speaker B : At what point did you decide to expand and how did you decide where to expand to first?
[ 0:43:25.000 ---> 0:43:32.000 ] Speaker A : So the question is, how do we decide to expand and when is that geographical? Is that our team? Is that markets?
[ 0:43:33.000 ---> 0:43:36.000 ] Speaker B : How did you find the connections to reach out to?
[ 0:43:37.000 ---> 0:44:45.000 ] Speaker A : I think some of it's deliberate. We sort of say, obviously we build a lot of things in China, so we need to have a presence there and manage things. So at some point we got big enough that we wanted our own team on the ground. We've expanded sales. I think we're in 56 countries globally, 100,000 points of sale. So that was we started in North America, we went to Europe, we went to Asia. Now we think a little bit differently about when we launch what geographies we go to. So some of it's deliberate and planned, some of it takes time and again, it's part of know, we want to be here. Here's how we want to grow, we want to migrate our business this way. And then a lot of it is also opportunistic, right? There are markets that we've entered where we had a really good partner or we had a really strong proposition, or the culture was really well suited to what we were doing for up. China is a huge market for us. We went in with Apple, in Apple Stores and that was a great stamp of credibility. And we sort of rode that know again, but we knew we wanted to be in China and that was a great entry point for us. So I think it depends on what you're doing specifically and what's appropriate for that situation. Go ahead.
[ 0:44:45.000 ---> 0:44:47.000 ] Speaker B : Why haven't you made any.
[ 0:44:51.000 ---> 0:45:31.000 ] Speaker A : Know for us? Like any category, I get asked of a lot of different things. Headphones is sort of one for us. When we come into a space, we want to blow it wide open and make sure we have a proposition that makes it better for the user than what's there today and make it better in sort of an order magnitude or two order magnitudes and do stuff. So sometimes the market's not ready, sometimes the technology base isn't ready, sometimes we're not ready. We don't have the right capabilities to synthesize and pull those pieces together. So it's a combination of factors, whatever the product or the category is. Go ahead in the red sweater.
[ 0:45:31.000 ---> 0:45:53.000 ] Speaker C : Hi. For a hardware company or business company, the product cycle is always a headache. Sam mentioned one early we'll try to run a hardware company like a software company. I was wondering if anything can share there. Are you trying to run Java? More like as much as close to a software company to give user feedback along the way in your development process.
[ 0:45:54.000 ---> 0:47:08.000 ] Speaker A : So I think the question was hardware companies are sort of hard to run, they're different from software companies. How are we trying to run Java? Right. I would say there's no model for what we're trying to do. It's never been done before. So we feel like we're at the tip of the arrow. We're putting together disciplines that have never had to work side by side to create experiences. It's very painful sometimes it's very fun. We try to take the best of everything, try to take the best practices of what make rapid software iteration, testing and development deployment. Try to apply that to hardware. We try to take the resolution that you require in hardware and apply that to software design because web software is very different than mobile software. And it turned out that building mobile software was actually a lot more like building hardware where you actually had one shot and you had to get it right, right out of the gate. So we try to take the lessons from each place and make ourselves really good. And that's my job and that's job of some of the other senior leadership just to look at those opportunities of how you kind of take the best of everything and put it together. But I don't think there's ever been a company that's been great at equally great at hardware, software and data. And that's what we're trying to you all right. Thank you, guys.
